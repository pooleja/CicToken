{
  "contractName": "CICProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractLogic",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractLogic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/james/Source/pooleja/CicToken/contracts/CICProxy.sol\":\"CICProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/james/Source/pooleja/CicToken/contracts/CICProxy.sol\":{\"keccak256\":\"0xc4ddada214fac2fc6fe69ece3dce5f929e1e264a4574b97e269f62c7021b138e\",\"urls\":[\"bzz-raw://eb00fdaf28eab92a4ce6f148b2fe969ad516de52968608af59e8506bc07c0f13\",\"dweb:/ipfs/QmQfKmJftgGe5B9S8MuJqeDu8W8fw4kcNUqSDyKfToozxd\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161019b38038061019b8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f436f6e7472616374204c6f6769632063616e6e6f74206265203078300000000081525060200191505060405180910390fd5b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755506082806101196000396000f3fe60806040527fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75460405136600082376000803683855af43d806000843e81600081146048578184f35b8184fdfea264697066735822122014913a1bd69f67ebc276a92a0abceef1314de92ef5a1f87ae8d0a5d3868e36e264736f6c63430006020033",
  "deployedBytecode": "0x60806040527fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75460405136600082376000803683855af43d806000843e81600081146048578184f35b8184fdfea264697066735822122014913a1bd69f67ebc276a92a0abceef1314de92ef5a1f87ae8d0a5d3868e36e264736f6c63430006020033",
  "sourceMap": "24:1230:0:-:0;;;262:363;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:363:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;262:363:0;;;;;;;;;;;;;;;;395:1;370:27;;:13;:27;;;;362:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:13;527:66;520:89;483:136;24:1230;;;;;;",
  "deployedSourceMap": "24:1230:0:-:0;;;742:66;736:73;839:4;833:11;880:14;875:3;870;857:38;982:1;979;963:14;958:3;943:13;936:5;923:61;1010:16;1062:5;1059:1;1054:3;1039:29;1088:7;1113:1;1108:57;;;;1216:5;1211:3;1204:18;1108:57;1145:5;1140:3;1133:18",
  "source": "pragma solidity 0.6.2;\n\ncontract CICProxy {\n    \n\n    // Code position in storage is keccak256(\"PROXIABLE\") = \"0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\"\n    // constructor(bytes memory constructData, address contractLogic) public {\n    constructor(address contractLogic) public {\n        // Verify a valid address was passed in\n        require(contractLogic != address(0), \"Contract Logic cannot be 0x0\");\n\n        // save the code address\n        assembly { // solium-disable-line\n            sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, contractLogic)\n        }\n    }\n\n    fallback() external payable {\n        assembly { // solium-disable-line\n            let contractLogic := sload(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0x0, calldatasize())\n            let success := delegatecall(gas(), contractLogic, ptr, calldatasize(), 0, 0)\n            let retSz := returndatasize()\n            returndatacopy(ptr, 0, retSz)\n            switch success\n            case 0 {\n                revert(ptr, retSz)\n            }\n            default {\n                return(ptr, retSz)\n            }\n        }\n    }\n}",
  "sourcePath": "/Users/james/Source/pooleja/CicToken/contracts/CICProxy.sol",
  "ast": {
    "absolutePath": "/Users/james/Source/pooleja/CicToken/contracts/CICProxy.sol",
    "exportedSymbols": {
      "CICProxy": [
        24
      ]
    },
    "id": 25,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 24,
        "linearizedBaseContracts": [
          24
        ],
        "name": "CICProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "304:321:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7,
                          "name": "contractLogic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "370:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "395:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "387:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "387:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "387:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "370:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7472616374204c6f6769632063616e6e6f7420626520307830",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "399:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dee7da6d7e543059da8914f051466db24a2474868d960ebbdb55dbc3eef58e5",
                          "typeString": "literal_string \"Contract Logic cannot be 0x0\""
                        },
                        "value": "Contract Logic cannot be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dee7da6d7e543059da8914f051466db24a2474868d960ebbdb55dbc3eef58e5",
                          "typeString": "literal_string \"Contract Logic cannot be 0x0\""
                        }
                      ],
                      "id": 6,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "362:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "362:68:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "483:136:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "527:66:0",
                              "type": "",
                              "value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
                            },
                            {
                              "name": "contractLogic",
                              "nodeType": "YulIdentifier",
                              "src": "595:13:0"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "520:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "520:89:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "520:89:0"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "595:13:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 16,
                  "nodeType": "InlineAssembly",
                  "src": "474:145:0"
                }
              ]
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "contractLogic",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18,
                  "src": "274:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:23:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:0:0"
            },
            "scope": 24,
            "src": "262:363:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "659:593:0",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "678:568:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "715:94:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "742:66:0",
                              "type": "",
                              "value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "736:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "736:73:0"
                        },
                        "variables": [
                          {
                            "name": "contractLogic",
                            "nodeType": "YulTypedName",
                            "src": "719:13:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "822:22:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "839:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "833:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "833:11:0"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "826:3:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "870:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "875:3:0",
                              "type": "",
                              "value": "0x0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "880:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "880:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "857:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "857:38:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "857:38:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "908:76:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "936:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "936:5:0"
                            },
                            {
                              "name": "contractLogic",
                              "nodeType": "YulIdentifier",
                              "src": "943:13:0"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "958:3:0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "963:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "963:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "979:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "923:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "923:61:0"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "912:7:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "997:29:0",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "1010:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1010:16:0"
                        },
                        "variables": [
                          {
                            "name": "retSz",
                            "nodeType": "YulTypedName",
                            "src": "1001:5:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1054:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1059:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "retSz",
                              "nodeType": "YulIdentifier",
                              "src": "1062:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1039:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1039:29:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1039:29:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1115:50:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1140:3:0"
                                      },
                                      {
                                        "name": "retSz",
                                        "nodeType": "YulIdentifier",
                                        "src": "1145:5:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1133:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1133:18:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1133:18:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1108:57:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1113:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1186:50:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1211:3:0"
                                      },
                                      {
                                        "name": "retSz",
                                        "nodeType": "YulIdentifier",
                                        "src": "1216:5:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1204:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1204:18:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1204:18:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1178:58:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "success",
                          "nodeType": "YulIdentifier",
                          "src": "1088:7:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1081:155:0"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [],
                  "id": 21,
                  "nodeType": "InlineAssembly",
                  "src": "669:577:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "639:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:0"
            },
            "scope": 24,
            "src": "631:621:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25,
        "src": "24:1230:0"
      }
    ],
    "src": "0:1254:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/james/Source/pooleja/CicToken/contracts/CICProxy.sol",
    "exportedSymbols": {
      "CICProxy": [
        24
      ]
    },
    "id": 25,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 24,
        "linearizedBaseContracts": [
          24
        ],
        "name": "CICProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "304:321:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7,
                          "name": "contractLogic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "370:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "395:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "387:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "387:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "387:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "370:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7472616374204c6f6769632063616e6e6f7420626520307830",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "399:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dee7da6d7e543059da8914f051466db24a2474868d960ebbdb55dbc3eef58e5",
                          "typeString": "literal_string \"Contract Logic cannot be 0x0\""
                        },
                        "value": "Contract Logic cannot be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dee7da6d7e543059da8914f051466db24a2474868d960ebbdb55dbc3eef58e5",
                          "typeString": "literal_string \"Contract Logic cannot be 0x0\""
                        }
                      ],
                      "id": 6,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "362:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "362:68:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "483:136:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "527:66:0",
                              "type": "",
                              "value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
                            },
                            {
                              "name": "contractLogic",
                              "nodeType": "YulIdentifier",
                              "src": "595:13:0"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "520:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "520:89:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "520:89:0"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "595:13:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 16,
                  "nodeType": "InlineAssembly",
                  "src": "474:145:0"
                }
              ]
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "contractLogic",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18,
                  "src": "274:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:23:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:0:0"
            },
            "scope": 24,
            "src": "262:363:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "659:593:0",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "678:568:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "715:94:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "742:66:0",
                              "type": "",
                              "value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "736:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "736:73:0"
                        },
                        "variables": [
                          {
                            "name": "contractLogic",
                            "nodeType": "YulTypedName",
                            "src": "719:13:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "822:22:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "839:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "833:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "833:11:0"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "826:3:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "870:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "875:3:0",
                              "type": "",
                              "value": "0x0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "880:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "880:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "857:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "857:38:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "857:38:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "908:76:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "936:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "936:5:0"
                            },
                            {
                              "name": "contractLogic",
                              "nodeType": "YulIdentifier",
                              "src": "943:13:0"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "958:3:0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "963:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "963:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "979:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "923:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "923:61:0"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "912:7:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "997:29:0",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "1010:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1010:16:0"
                        },
                        "variables": [
                          {
                            "name": "retSz",
                            "nodeType": "YulTypedName",
                            "src": "1001:5:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1054:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1059:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "retSz",
                              "nodeType": "YulIdentifier",
                              "src": "1062:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1039:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1039:29:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1039:29:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1115:50:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1140:3:0"
                                      },
                                      {
                                        "name": "retSz",
                                        "nodeType": "YulIdentifier",
                                        "src": "1145:5:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1133:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1133:18:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1133:18:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1108:57:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1113:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1186:50:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1211:3:0"
                                      },
                                      {
                                        "name": "retSz",
                                        "nodeType": "YulIdentifier",
                                        "src": "1216:5:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1204:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1204:18:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1204:18:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1178:58:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "success",
                          "nodeType": "YulIdentifier",
                          "src": "1088:7:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1081:155:0"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [],
                  "id": 21,
                  "nodeType": "InlineAssembly",
                  "src": "669:577:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "639:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:0"
            },
            "scope": 24,
            "src": "631:621:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25,
        "src": "24:1230:0"
      }
    ],
    "src": "0:1254:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-16T04:47:43.274Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}